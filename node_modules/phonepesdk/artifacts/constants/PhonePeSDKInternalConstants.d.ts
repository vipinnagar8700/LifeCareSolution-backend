export declare namespace InternalConstants {
    const sdkVersion: string;
    const PhonePeSDKRNMajorVersion: number;
    const PhonePeSDKRNMinorVersion: number;
    const data_preferences: string;
    const PhonePeSDKVersion = 4;
    namespace General {
        const confirmationScreenDuration = 400;
        const discoveryContextMode = "PEER_TO_MERCHANT";
        const paymentScreenName = "PAY";
        const v1 = "v1";
        const v2 = "v2";
    }
    namespace ErrorCode {
        const invalidParams = "PARAMS_INVALID_OR_INSUFFICIENT";
    }
    namespace ActivityID {
        const payments = 103;
        const transactionDetails = 105;
    }
    namespace PermissionsBridge {
        const name = "PermissionsBridge";
        const seekPermission = "seekPermission";
        const openSettingsPage = "openSettingsPageForPermission";
        const androidPrefix = "android.permission.";
        const locationPermissionName = "ACCESS_FINE_LOCATION";
        const kPermission = "permission";
        const kPermissionStatus = "permissionGranted";
        const kShowAgain = "willShowPermissionAlertAgain";
    }
    namespace AnalyticsBridge {
        const bridgeName = "AnalyticsBridge";
        const methodName = "logMerchantEvent";
        const kName = "name";
        const kMetadata = "metadata";
        const kGroupingKey = "groupingKey";
    }
    namespace AuthBridge {
        const bridgeName = "AuthBridge";
        const fetchGrantToken = "fetchGrantToken";
        const fetchAuthToken = "fetchAuthToken";
        const fetchPermissionGrantToken = "resourceGrant";
        const resourceGrant = "resourceGrant";
    }
    namespace NavigationBridge {
        const bridgeName = "NavigationBridge";
        const navigateToMap = "navigateToMap";
        const navigateToSwitchApp = "navigateToSwitchApp";
    }
    namespace OrientationBridge {
        const bridgeName = "OrientationBridge";
        const changeOrientation = "changeOrientation";
        const requestFullScreenMode = "requestFullScreenMode";
        const requestExitFullScreenMode = "requestExitFullScreenMode";
    }
    namespace OrderActionBridge {
        const bridgeName = "OrderActionBridge";
        const reserveOrder = "reserveOrder";
        const fetchOrderRequestToken = "fetchOrderRequestToken";
        const openPaymentsPageForReservedOrder = "openPaymentsPageForReservedOrder";
    }
    namespace FilePickerBridge {
        const bridgeName = "FilePickerBridge";
        const selectFile = "selectFile";
        const readFile = "readFile";
    }
    namespace CameraBridge {
        const bridgeName = "CameraBridge";
        const scanQRCode = "scanQRCode";
        const startCamera = "startCamera";
    }
    namespace BleManager {
        const bridgeName = "BleManager";
        const read = "read";
        const readRSSI = "readRSSI";
        const refreshCache = "refreshCache";
        const retrieveServices = "retrieveServices";
        const write = "write";
        const writeWithoutResponse = "writeWithoutResponse";
        const connect = "connect";
        const createBond = "createBond";
        const removeBond = "removeBond";
        const disconnect = "disconnect";
        const startNotification = "startNotification";
        const stopNotification = "stopNotification";
        const checkState = "checkState";
        const start = "start";
        const scan = "scan";
        const stopScan = "stopScan";
        const enableBluetooth = "enableBluetooth";
        const getConnectedPeripherals = "getConnectedPeripherals";
        const getBondedPeripherals = "getBondedPeripherals";
        const getDiscoveredPeripherals = "getDiscoveredPeripherals";
        const removePeripheral = "removePeripheral";
        const isPeripheralConnected = "isPeripheralConnected";
        const requestConnectionPriority = "requestConnectionPriority";
        const requestMTU = "requestMTU";
        const registerBluetoothOperationSuccessCallback = "registerBluetoothOperationSuccessCallback";
    }
    namespace VideoPlayerBridge {
        const bridgeName = "VideoPlayerBridge";
        const startVideoPlayer = "startVideoPlayer";
    }
    namespace Feature {
        const videoCall = "videoCall";
    }
}
