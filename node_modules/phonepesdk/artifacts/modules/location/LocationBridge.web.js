"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const PhonePeWebSubscription_1 = require("./../../subscription/PhonePeWebSubscription");
const PhonePeSDKWebConstants_1 = require("./../../constants/PhonePeSDKWebConstants");
const MessagingHandler_1 = require("../../core/web/MessagingHandler");
const EventHandler_1 = require("../../core/web/EventHandler");
var Const = PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.Location;
class WebLocationBridge {
    getAddress(latitude, longitude) {
        return Promise.resolve();
    }
    startUpdatingLocation() {
        MessagingHandler_1.MessagingHandler.callNative(Const.startUpdatingLocation, Const.androidBridgeName, {});
    }
    stopUpdatingLocation() {
        MessagingHandler_1.MessagingHandler.callNative(Const.stopUpdatingLocation, Const.androidBridgeName, {});
        EventHandler_1.EventHandler.removeAllSubscriptions(Const.locationSuccessEventKey);
        EventHandler_1.EventHandler.removeAllSubscriptions(Const.locationFailureEventKey);
    }
    getCurrentLocation() {
        let obj = {};
        obj[Const.forceNewLocation] = true;
        return MessagingHandler_1.MessagingHandler.storePromiseAndCallNative(Const.getCurrentLocation, Const.androidBridgeName, obj);
    }
    onLocationUpdateSuccess(callbackName, callback) {
        let subscription = new PhonePeWebSubscription_1.PhonePeWebSubscription(callbackName, Const.locationSuccessEventKey, callback);
        EventHandler_1.EventHandler.addSubscription(subscription);
        return subscription;
    }
    onLocationUpdateFailure(callbackName, callback) {
        let subscription = new PhonePeWebSubscription_1.PhonePeWebSubscription(callbackName, Const.locationFailureEventKey, callback);
        EventHandler_1.EventHandler.addSubscription(subscription);
        return subscription;
    }
    isLocationTurnedOn() {
        return Promise.resolve();
    }
    turnOnLocation() {
        return Promise.resolve();
    }
    setLocationPriority(locationPriority) {
    }
}
exports.WebLocationBridge = WebLocationBridge;
