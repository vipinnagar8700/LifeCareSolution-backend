const path = require("path");
var debug = process.env.NODE_ENV !== "production";
var webpack = require('webpack');
const UglifyJsPlugin = require('uglifyjs-webpack-plugin')
console.log("env = " + process.env.NODE_ENV);
console.log("debug = " + debug);

var plugins = []

plugins.push(new UglifyJsPlugin({

    // Compression specific options
    uglifyOptions: {
        // Eliminate comments
        comments: false,

        compress: {
            // remove warnings
                warnings: false,

            // Drop console statements
                drop_console: false
        },
    }

}))

plugins.push(new webpack.IgnorePlugin(/react-native/, /ios/ , /android/ ), new webpack.DefinePlugin({
    'process.env': {
        'PHONEPE_BUILD_ENV': JSON.stringify('web')
    }
}))


module.exports = {
    entry: "./src/core/PhonePe.ts",
    externals: {
        react: 'React',
        'react-native': 'ReactNative'
    },
    output: {
      filename: 'phonepesdk.js',
      path: path.resolve(__dirname, "lib"),
      libraryTarget: 'var',
      library: 'PhonePe'
    },
    module: {
        rules:[
            {
                exclude: path.resolve(__dirname, "./lib"),
            },
            {
                test: /\.tsx?$/,
                loader: "awesome-typescript-loader"
            }
        ]
    },
    resolve: {
        extensions: ['.ts', '.tsx'],
    },
    optimization: {
        minimizer: plugins
    }
  };