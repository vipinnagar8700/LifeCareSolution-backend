"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Logger_1 = require("../../logging/Logger");
const MessagingHandler_1 = require("../../../core/web/MessagingHandler");
const PhonePeSDKExternalConstants_1 = require("./../../../constants/PhonePeSDKExternalConstants");
const PhonePeSDKWebConstants_1 = require("../../../constants/PhonePeSDKWebConstants");
var Const = PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.Preferences;
class WebNativePreferenceBridge {
    constructor(operatingSystem) {
        this.operatingSystem = operatingSystem;
    }
    getString(preferenceName, key, defaultValue) {
        let obj = this.prefObject(preferenceName, key, undefined, defaultValue);
        return MessagingHandler_1.MessagingHandler.storePromiseAndCallNative(Const.getItem, Const.androidBridgeName, obj);
    }
    getNumber(preferenceName, key, defaultValue) {
        return new Promise((resolve, reject) => {
            reject('This should not be called in case of web pref bridge');
        });
    }
    getDecryptedUserId() {
        return new Promise((resolve, reject) => {
            reject('This should not be called in case of web pref bridge');
        });
    }
    saveNumber(preferenceName, key, value) {
        Logger_1.Logger.logd('PhonePe', '[Error] his should not be called in case of web pref bridge');
    }
    saveString(preferenceName, key, value) {
        let obj = this.prefObject(preferenceName, key, value, undefined);
        MessagingHandler_1.MessagingHandler.callNative(Const.setItem, Const.androidBridgeName, obj);
    }
    removeItem(preferenceName, key) {
        let obj = this.prefObject(preferenceName, key, undefined, undefined);
        let methodName = Const.removeItem;
        if (this.operatingSystem === PhonePeSDKExternalConstants_1.ExternalConstants.OS.android) {
            methodName = Const.removeItemAndroid;
        }
        MessagingHandler_1.MessagingHandler.callNative(methodName, PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.Preferences.androidBridgeName, obj);
    }
    prefObject(prefName, key, value, defaultValue) {
        let obj = {};
        if (prefName) {
            obj[PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.General.prefName] = prefName;
        }
        if (key) {
            obj[PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.General.key] = key;
        }
        if (defaultValue) {
            obj[PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.General.defaultValue] = defaultValue;
        }
        if (value) {
            obj[PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.General.value] = value;
        }
        return obj;
    }
}
exports.WebNativePreferenceBridge = WebNativePreferenceBridge;
