import { ExternalPaymentsNamespace } from './models';
import MicroPayRequest = ExternalPaymentsNamespace.MicroPayRequest;
import PaymentTimeOutModel = ExternalPaymentsNamespace.PaymentTimeOutModel;
import DismissBehaviourModel = ExternalPaymentsNamespace.DismissBehaviourModel;
import InternalPaymentUiConfig = ExternalPaymentsNamespace.InternalPaymentUiConfig;
import { ExternalPaymentModels } from './ExternalPaymentModels';
import TransactionState = ExternalPaymentModels.TransactionState;
import ActionButtonProp = ExternalPaymentModels.ActionButtonProp;
export declare class ExternalPaymentsRequestFactory {
    static microPayRequest(context: {
        [key: string]: any;
    }, version: string, fallbackURL?: string): MicroPayRequest;
    static discoveryContext(merchantId: string): {
        [p: string]: string;
    };
    static internalPaymentUIConfig(initialAmount: number, contactName: string, timeoutInterval?: number, imageURL?: string, confirmationActionButtonProperties?: Partial<{
        [key in TransactionState]: ActionButtonProp;
    }>, merchantId?: string): InternalPaymentUiConfig;
    static paymentTimeoutModel(timeoutInterval: number): PaymentTimeOutModel;
    static paymentDismissModel(): DismissBehaviourModel;
}
