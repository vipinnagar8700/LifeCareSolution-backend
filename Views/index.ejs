<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat Application</title>
</head>
<body>
    <h1>Chat Application</h1>

    <div id="chat-box"></div>

    <form id="message-form">
        <input type="text" id="message-input" placeholder="Enter your message">
        <input type="file" id="file-input">
        <button type="submit">Send</button>
    </form>

    <script>
        const form = document.getElementById('message-form');
        const messageInput = document.getElementById('message-input');
        const fileInput = document.getElementById('file-input');
        const chatBox = document.getElementById('chat-box');

        // Function to send a message
        const sendMessage = async (event) => {
            event.preventDefault();

            const formData = new FormData();
            formData.append('sender', '658bab1824ef87ba89307766'); // Replace 'sender_id' with actual sender ID
            formData.append('receiver', '658bab1824ef87ba89307766'); // Replace 'receiver_id' with actual receiver ID
            formData.append('content', messageInput.value);

            if (fileInput.files.length > 0) {
                formData.append('file', fileInput.files[0]);
            }

            try {
                const response = await fetch('/api/SendMessages', {
                    method: 'POST',
                    body: formData
                });

                const data = await response.json();
                if (data.success) {
                    messageInput.value = '';
                    fileInput.value = '';
                }
            } catch (error) {
                console.error('Error sending message:', error);
            }
        };

        // Function to display received messages
        const displayMessage = (message) => {
            const messageElement = document.createElement('div');
            messageElement.textContent = `${message.sender}: ${message.content}`;
            chatBox.appendChild(messageElement);
        };

        // Event listener for message form submission
        form.addEventListener('submit', sendMessage);

        // Socket.io connection for receiving messages
        const socket = io();
        socket.on('chat', (newChat) => {
            displayMessage(newChat);
        });
    </script>
</body>
</html>
