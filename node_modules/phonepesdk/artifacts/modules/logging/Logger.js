"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const PhonePe_1 = require("../../core/PhonePe");
class Logger {
    static isLoggingEnabled() {
        return PhonePe_1.PhonePe.loggingEnabled;
    }
    static logd(tag, message) {
        if (Logger.isLoggingEnabled()) {
            console.log('[' + tag + '] ' + message);
        }
    }
    constructor(tag) {
        this.tag = tag;
    }
    logd(message) {
        Logger.logd(this.tag, message);
    }
    logAnything(message) {
        console.log(message);
    }
    logError(error) {
        if (process.env.PHONEPE_BUILD_ENV !== 'web') {
            const { Platform } = require('react-native');
            if (Platform.OS === 'ios') {
                let finalErrorString = '[ERROR iOS]';
                if (error.message) {
                    finalErrorString = finalErrorString + 'Rejection message = ' + error.message + ' ; ';
                }
                if (error.code) {
                    finalErrorString = finalErrorString + 'Error code = ' + error.code + ' ; ';
                }
                if (error.domain) {
                    finalErrorString = finalErrorString + 'Error domain = ' + error.domain + ' ; ';
                }
                if (error.userInfo && error.userInfo.NSLocalizedDescription) {
                    finalErrorString = finalErrorString + 'Error description = ' + error.userInfo.NSLocalizedDescription + ' ; ';
                }
                if (error.userInfo && error.userInfo.NSLocalizedFailureReason) {
                    finalErrorString = finalErrorString + 'Error failure reason = ' + error.userInfo.NSLocalizedFailureReasonError + ' ; ';
                }
                Logger.logd(this.tag, finalErrorString);
            }
            else {
                Logger.logd(this.tag, error);
            }
        }
    }
}
exports.Logger = Logger;
