"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const Logger_1 = require("../logging/Logger");
const MessagingHandler_1 = require("../../core/web/MessagingHandler");
const PhonePeSDKWebConstants_1 = require("../../constants/PhonePeSDKWebConstants");
const PhonePeSDKInternalConstants_1 = require("../../constants/PhonePeSDKInternalConstants");
class MethodVersioningHandler {
    static initSupportedVersionFromNative() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.fetchNativeSupportedSDKVersion().then((version) => {
                Logger_1.Logger.logd('PhonePe', 'Version received from native side = ' + version);
                MethodVersioningHandler.version = Number(version);
            }).catch((err) => {
                Logger_1.Logger.logd('PhonePe', 'Error found when trying to fetch version = ' + err);
                throw Error('Unable to fetch native version. App has to run inside PhonePe app.');
            });
            this.populateMethodToVersionMapping();
        });
    }
    static isMethodSupported(methodName) {
        if (methodName === PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.Metadata.supportedVersion) {
            return true;
        }
        if (!MethodVersioningHandler.version) {
            Logger_1.Logger.logd('PhonePe', '[Error] Can\'t call isMethodSupported before native has returned the version');
            throw Error('Can\'t call isMethodSupported before native has returned the version');
        }
        let mapping = MethodVersioningHandler.methodToVersionMapping[methodName];
        if (mapping) {
            let min = mapping[PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.General.min];
            let max = mapping[PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.General.max];
            let nativeSDKSupportVersion = MethodVersioningHandler.version;
            Logger_1.Logger.logd('PhonePe', 'Comparing minVersion = ' + min + ' maxVersion = ' + max + ' nativeSDKSupportVersion = ' + nativeSDKSupportVersion);
            if (nativeSDKSupportVersion < min) {
                return false;
            }
            if (max !== -1 && nativeSDKSupportVersion > max) {
                return false;
            }
        }
        else {
            Logger_1.Logger.logd('PhonePe', '[Error] Could not find this method in mapping. This should never happen!');
            throw Error('Could not find this method in supported methods.');
        }
        return true;
    }
    static fetchNativeSupportedSDKVersion() {
        Logger_1.Logger.logd('PhonePe', 'Trying to call supportedVersion method in fetchNativeSupportedSDKVersion');
        return MessagingHandler_1.MessagingHandler.storePromiseAndCallNative(PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.Metadata.supportedVersion, PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.Metadata.androidBridgeName, {});
    }
    static populateMethodToVersionMapping() {
        let obj = { min: 1, max: -1 };
        this.methodToVersionMapping[PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.Preferences.getItem] = obj;
        this.methodToVersionMapping[PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.Preferences.setItem] = obj;
        this.methodToVersionMapping[PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.Preferences.removeItem] = obj;
        this.methodToVersionMapping[PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.Preferences.removeItemAndroid] = obj;
        this.methodToVersionMapping[PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.Location.startUpdatingLocation] = obj;
        this.methodToVersionMapping[PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.Location.stopUpdatingLocation] = obj;
        this.methodToVersionMapping[PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.Location.getCurrentLocation] = obj;
        this.methodToVersionMapping[PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.Navigation.navigateToPath] = obj;
        this.methodToVersionMapping[PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.Navigation.navigateToPathForResult] = obj;
        this.methodToVersionMapping[PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.NavigationIOS.navigateToPaymentsView] = obj;
        this.methodToVersionMapping[PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.NavigationIOS.navigateToHelpPage] = obj;
        this.methodToVersionMapping[PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.NavigationIOS.navigateToTransactionDetail] = obj;
        this.methodToVersionMapping[PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.User.getUserDetails] = obj;
        this.methodToVersionMapping[PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.Metadata.supportedVersion] = obj;
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.PermissionsBridge.openSettingsPage] = obj;
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.PermissionsBridge.seekPermission] = obj;
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.AnalyticsBridge.methodName] = obj;
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.AuthBridge.fetchGrantToken] = obj;
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.CameraBridge.scanQRCode] = obj;
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.CameraBridge.startCamera] = obj;
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.OrderActionBridge.reserveOrder] = Object.assign({}, obj, { min: 3 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.OrderActionBridge.openPaymentsPageForReservedOrder] = Object.assign({}, obj, { min: 3 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.OrderActionBridge.fetchOrderRequestToken] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.FilePickerBridge.readFile] = Object.assign({}, obj, { min: 4 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.FilePickerBridge.selectFile] = Object.assign({}, obj, { min: 4 });
        this.methodToVersionMapping[PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.NavigationIOS.navigateToGenericPaymentsView] = Object.assign({}, obj, { min: 5 });
        this.methodToVersionMapping[PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.Navigation.navigateToGenericPayment] = Object.assign({}, obj, { min: 5 });
        this.methodToVersionMapping[PhonePeSDKWebConstants_1.PhonePeSDKWebConstants.Navigation.navigateToGenericPaymentForResult] = Object.assign({}, obj, { min: 5 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.AuthBridge.fetchAuthToken] = Object.assign({}, obj, { min: 5 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.AuthBridge.fetchPermissionGrantToken] = Object.assign({}, obj, { min: 5 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.BleManager.read] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.BleManager.readRSSI] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.BleManager.refreshCache] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.BleManager.retrieveServices] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.BleManager.write] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.BleManager.writeWithoutResponse] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.BleManager.connect] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.BleManager.createBond] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.BleManager.removeBond] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.BleManager.disconnect] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.BleManager.startNotification] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.BleManager.stopNotification] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.BleManager.checkState] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.BleManager.start] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.BleManager.scan] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.BleManager.stopScan] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.BleManager.enableBluetooth] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.BleManager.getConnectedPeripherals] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.BleManager.getBondedPeripherals] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.BleManager.getDiscoveredPeripherals] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.BleManager.removePeripheral] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.BleManager.isPeripheralConnected] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.BleManager.requestConnectionPriority] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.BleManager.requestMTU] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.BleManager.registerBluetoothOperationSuccessCallback] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.NavigationBridge.navigateToMap] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.NavigationBridge.navigateToSwitchApp] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.OrientationBridge.changeOrientation] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.OrientationBridge.requestExitFullScreenMode] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.OrientationBridge.requestFullScreenMode] = Object.assign({}, obj, { min: 6 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.Feature.videoCall] = Object.assign({}, obj, { min: 7 });
        this.methodToVersionMapping[PhonePeSDKInternalConstants_1.InternalConstants.VideoPlayerBridge.startVideoPlayer] = Object.assign({}, obj, { min: 6 });
    }
}
MethodVersioningHandler.methodToVersionMapping = {};
exports.MethodVersioningHandler = MethodVersioningHandler;
