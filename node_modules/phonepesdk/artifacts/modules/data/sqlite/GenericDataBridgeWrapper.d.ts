import { NativePreferenceBridgeContract } from '../preferences/NativePreferenceBridgeContract';
import { DataBridgeWrapper, InitialiseCallback } from './DataBridgeWrapper';
export declare namespace GenericDataBridge {
    class GenericDataBridgeWrapper extends DataBridgeWrapper {
        private logger;
        private preferenceBridge;
        private databaseName;
        private databaseVersion;
        private onCreatedCallback;
        private onUpgradeCallback;
        private initialiseDatabaseCallback;
        constructor(databaseName: string, databaseVersion: number, preferenceBridge: NativePreferenceBridgeContract, onUpgradeCallback: GenericDataBridgeOnUpdateCallback, onCreatedCallback: GenericDataBridgeCallback, initialiseDatabaseCallback: GenericDataBridgeCallback);
        initialise(callback: InitialiseCallback): void;
        initialiseDatabase(databaseName: string, databaseVersion: number, onUpgradeCallback: GenericDataBridgeOnUpdateCallback, onCreatedCallback: GenericDataBridgeCallback, dataInitCallback: GenericDataBridgeCallback): Promise<any>;
        onDatabaseCreated(isSuccess: boolean): void;
        onDatabaseUpdated(isSuccess: boolean): void;
    }
    interface GenericDataBridgeOnUpdateCallback {
        (oldVersion: number, newVersion: number): Promise<any>;
    }
    interface GenericDataBridgeCallback {
        (): Promise<any>;
    }
}
